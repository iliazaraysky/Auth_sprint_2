version: '3'

services:
  db:
    image: postgres:13.6
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./AsyncApi/docker_compose/database/film_work_data.sql:/docker-entrypoint-initdb.d/film_work_data.sql
    env_file:
      - .env
    environment:
      - 'POSTGRES_USER:"${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD:${POSTGRES_PASSWORD}'
      - 'POSTGRES_DB:${POSTGRES_DB}'
  redis:
    image: redis:7.0-rc3-alpine3.15
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    depends_on:
      - db
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - http.compression=true
      - http.max_content_length=500mb
    depends_on:
      - db
      - redis
  fastapi:
    build: ./AsyncApi/fastapi
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - db
      - es01
      - redis
    env_file:
      - ./AsyncApi/docker_compose/.env
  auth:
    build: ./Auth
    entrypoint: >
      sh -c "python -m pytest -W ignore tests/
             flask db upgrade
             flask createsuperuser admin password123
             gunicorn wsgi_app:app --bind :5000"
    ports:
      - 5000:5000
    env_file:
      - ./Auth/.env
    depends_on:
      - db
      - es01
      - redis
      - fastapi
  etl01:
    build: ./AsyncApi/etl
    env_file:
      - ./AsyncApi/docker_compose/.env
    depends_on:
      - db
      - redis
      - es01
      - fastapi
      - auth
  nginx:
    image: nginx:stable
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - db
      - redis
      - es01
      - fastapi
      - auth
      - etl01
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - ${JAEGER_UDP}:${JAEGER_UDP}/udp
      - ${JAEGER}:${JAEGER}
    depends_on:
      - nginx

volumes:
  postgres_data:
